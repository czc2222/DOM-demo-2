{"version":3,"sources":["main.js"],"names":["window","dom","find","selector","scope","document","querySelectorAll","style","node","name","value","arguments","length","Object","object","key","each","nodeList","fn","i","call","div","console","log","divList","n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAW;AACPC,QADO,gBACFC,QADE,EACOC,KADP,EACc;AACjB,eAAO,CAACA,SAAQC,QAAT,EAAmBC,gBAAnB,CAAoCH,QAApC,CAAP;AACH,KAHM;AAIPI,SAJO,iBAIDC,IAJC,EAIIC,IAJJ,EAISC,KAJT,EAIe;AAClB,YAAGC,UAAUC,MAAV,KAAmB,CAAtB,EAAwB;AACpBJ,iBAAKD,KAAL,CAAWE,IAAX,IAAiBC,KAAjB;AACH,SAFD,MAEM,IAAGC,UAAUC,MAAV,KAAoB,CAAvB,EAAyB;AAC3B,gBAAG,OAAOH,IAAP,KAAgB,QAAnB,EAA4B;AAC5B,uBAAOD,KAAKD,KAAL,CAAWE,IAAX,CAAP;AACC,aAFD,MAEM,IAAGA,gBAAgBI,MAAnB,EAA0B;AAC5B,oBAAMC,SAAQL,IAAd;AACA,qBAAI,IAAIM,GAAR,IAAeD,MAAf,EAAsB;AAClBN,yBAAKD,KAAL,CAAWQ,GAAX,IAAiBD,OAAOC,GAAP,CAAjB;AAEH;AAEJ;AAEJ;AACJ,KApBM;AAqBPC,QArBO,gBAqBFC,QArBE,EAqBOC,EArBP,EAqBU;AACb,aAAI,IAAIC,IAAE,CAAV,EAAYA,IAAEF,SAASL,MAAvB,EAA8BO,GAA9B,EAAkC;AAC9BD,eAAGE,IAAH,CAAS,IAAT,EAAcH,SAASE,CAAT,CAAd;AACH;AACJ;AAzBM,CAAX;;AA4BA,IAAME,MAAMpB,IAAIC,IAAJ,CAAS,YAAT,EAAuB,CAAvB,CAAZ,EAAqC;AACrCoB,QAAQC,GAAR,CAAYF,GAAZ;AACApB,IAAIM,KAAJ,CAAUc,GAAV,EAAe,OAAf,EAAwB,KAAxB,GAA+B;AAC/B,IAAMG,UAAUvB,IAAIC,IAAJ,CAAS,MAAT,CAAhB,EAAgC;AAChCoB,QAAQC,GAAR,CAAYC,OAAZ;AACAvB,IAAIe,IAAJ,CAASQ,OAAT,EAAkB,UAACC,CAAD;AAAA,WAAMH,QAAQC,GAAR,CAAYE,CAAZ,CAAN;AAAA,CAAlB,GAAuC","file":"main.6a2e7978.map","sourceRoot":"..\\src","sourcesContent":["window.dom={\r\n    find(selector,scope) {\r\n        return (scope ||document).querySelectorAll(selector)\r\n    },\r\n    style(node,name,value){\r\n        if(arguments.length===3){\r\n            node.style[name]=value\r\n        }else if(arguments.length ===2){\r\n            if(typeof name === 'string'){\r\n            return node.style[name]\r\n            }else if(name instanceof Object){\r\n                const object =name\r\n                for(let key in object){\r\n                    node.style[key] =object[key]\r\n        \r\n                }\r\n            \r\n            }\r\n      \r\n        }\r\n    },\r\n    each(nodeList,fn){\r\n        for(let i=0;i<nodeList.length;i++){\r\n            fn.call (null,nodeList[i])\r\n        }\r\n    },\r\n}\r\n\r\nconst div = dom.find('#test>.red')[0]// 获取对应的元素\r\nconsole.log(div)\r\ndom.style(div, 'color', 'red') // 设置 div.style.color\r\nconst divList = dom.find('.red')//获取多个 div.red 元素\r\nconsole.log(divList)\r\ndom.each(divList, (n)=> console.log(n))// 遍历 divList 里的所有元素"]}